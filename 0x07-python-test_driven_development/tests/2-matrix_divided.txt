This is the matrix division test
================================

It includes the matrix_divided() function:


   >>> m = __import__('2-matrix_divided')
   >>> m.matrix_divided([['hello', 2, True], ['5', 0, 7]], 4)
   Traceback (most recent call last):
   TypeError: matrix must be a matrix (list of lists) of integers/floats
   >>> m.matrix_divided([[4, 6, 3], [8, 9]], 3)
   Traceback (most recent call last):
   TypeError: Each row of the matrix must have the same size
   >>> m.matrix_divided([[1, 2, 3], [4, 5, 6]], '9')
   Traceback (most recent call last):
   TypeError: div must be a number
   >>> m.matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
   Traceback (most recent call last):
   ZeroDivisionError: division by zero
   >>> m.matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
   [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
   >>> m.matrix_divided([5, 7, 9], 6)
   Traceback (most recent call last):
   TypeError: matrix must be a matrix (list of lists) of integers/floats
   >>> m.matrix_divided('hey', 5)
   Traceback (most recent call last):
   TypeError: matrix must be a matrix (list of lists) of integers/floats
   >>> m.matrix_divided([[3, 4], [1, 2]], float('nan'))
   [[0.3, 0.4], [0.1, 0.2]]
   >>> m.matrix_divided([[1, 2], [3, 4]])
   Traceback (most recent call last):
   TypeError: matrix_divided() missing 1 required positional argument: 'div'
   >>> m.matrix_divided()
   Traceback (most recent call last):
   TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
